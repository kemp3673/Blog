{"version":3,"file":"static/js/315.faf9034f.chunk.js","mappings":"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","sources":["pages/Profile.jsx"],"sourcesContent":["import React, { useEffect, useState } from \"react\";\nimport axios from \"axios\";\nimport { Link } from \"react-router-dom\";\n\nconst Profile = () => {\n  const [user, setUser] = useState(null);\n  const [selectedFile, setSelectedFile] = useState(null);\n  const [resumeMessage, setResumeMessage] = useState(null);\n\n  const user_id = 1; // TODO: Temporary until we have login working, then will get user_id from session\n\n  useEffect(() => {\n    const getUser = async () => {\n      try {\n        const { data } = await axios.get(`/api/auth/user/${user_id}`);\n        setUser(data[0]);\n      } catch (error) {\n        console.log(error);\n        const { data } = await axios.get(`/api/auth/user/${user_id}`);\n        setUser(data[0]);\n      }\n    };\n    getUser();\n  }, []);\n\n  const handleSelectFile = (e) => {\n    setResumeMessage(null);\n    setSelectedFile(e.target.files[0]);\n  };\n\n  const handleUpdateResume = async (e) => {\n    setResumeMessage(null);\n    e.preventDefault();\n    // If no file selected, return\n    if (!selectedFile) {\n      setResumeMessage(\"No file selected\");\n      return;\n    } else if (selectedFile.type !== \"application/pdf\") {\n      // If file type is not pdf, return\n      setResumeMessage(\"File must be a pdf\");\n      return;\n    } else if (selectedFile.size > 1000000) {\n      // If file size is greater than 1MB, return\n      setResumeMessage(\"File size must be less than 1MB\");\n      return;\n    }\n\n    // Create form data object\n    const formData = new FormData();\n    formData.append(\"resume\", selectedFile);\n    // Send form data to server\n    const { data } = await axios.post(`/api/auth/resume`, formData);\n    setResumeMessage(data.message);\n  };\n\n  return (\n    <div className=\"profile_container\">\n      {user ? (\n        <div className=\"profile_inner\">\n          <h1>Profile</h1>\n          <div className=\"profile_image\">\n            <img className=\"navbar_profile\" src={user.img} alt=\"profile\" />\n            <input type=\"file\" accept=\"image/*\" />\n            <button>Update Profile Picture</button>\n          </div>\n          <div className=\"profile_info\">\n            <h2>{user.name}</h2>\n            <h3>{user.email}</h3>\n          </div>\n          <div className=\"account_posts\">\n            <Link to=\"/projects/write\">\n              <button className=\"btn btn-primary\">Add Project Entry</button>\n            </Link>\n            <Link to=\"/blog/write\">\n              <button className=\"btn btn-primary\">Add Blog Entry</button>\n            </Link>\n            <form onSubmit={handleUpdateResume}>\n              <input type=\"file\" accept=\".pdf\" onChange={handleSelectFile} />\n              <button type=\"submit\">Update Resume</button>\n            </form>\n            {resumeMessage ? <span>{resumeMessage}</span> : null}\n          </div>\n        </div>\n      ) : null}\n    </div>\n  );\n};\n\nexport default Profile;\n"],"names":["_useState","useState","_useState2","_slicedToArray","user","setUser","_useState3","_useState4","selectedFile","setSelectedFile","_useState5","_useState6","resumeMessage","setResumeMessage","useEffect","getUser","_ref","_asyncToGenerator","_regeneratorRuntime","mark","_callee","_yield$axios$get","data","_yield$axios$get2","_data","wrap","_context","prev","next","axios","concat","sent","t0","console","log","stop","apply","arguments","handleUpdateResume","_ref2","_callee2","e","formData","_yield$axios$post","_context2","preventDefault","abrupt","type","size","FormData","append","message","_x","_jsx","className","children","_jsxs","src","img","alt","accept","name","email","Link","to","onSubmit","onChange","target","files"],"sourceRoot":""}