{"version":3,"file":"static/js/709.86d89c9d.chunk.js","mappings":"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","sources":["pages/WriteProject.jsx"],"sourcesContent":["import React, { useState } from \"react\";\nimport { IconContext } from \"react-icons\";\nimport { AiFillDelete } from \"react-icons/ai\";\nimport ReactQuill from \"react-quill\";\nimport \"react-quill/dist/quill.snow.css\"; // Component\n\nconst WriteProject = () => {\n  // State\n  const [title, setTitle] = useState(\"\");\n  const [skills, setSkills] = useState([]);\n  const [skillInput, setSkillInput] = useState(\"\");\n  const [text, setText] = useState(\"\");\n  const [uploadedFiles, setUploadedFiles] = useState([]);\n  const [screenshotFile, setScreenshotFile] = useState([]);\n\n  const handleSkillEntry = (e) => {\n    e.preventDefault();\n    const newSkill = skillInput.trim();\n\n    if (newSkill === \"\") return;\n    if (skills.includes(newSkill)) {\n      setSkillInput(\"\");\n      return;\n    }\n    setSkills([...skills, newSkill]);\n    setSkillInput(\"\");\n  };\n\n  const handleSkillInputChange = (e) => {\n    setSkillInput(e.target.value);\n  };\n\n  const screenShotHandler = (e) => {\n    const files = e.target.files;\n    // Convert the FileList object to an array and store it in the state\n    const filesArray = Array.from(files);\n    setScreenshotFile([...screenshotFile].concat(filesArray));\n  };\n\n  console.log(uploadedFiles);\n  console.log(text);\n\n  return (\n    <div className=\"writeblog_container\">\n      <div className=\"writeblog_inner\">\n        <div className=\"writeblog_content\">\n          <div className=\"writeblog_Title_Sum\">\n            <label htmlFor=\"summary\">Project Title</label>\n            <input\n              type=\"text\"\n              value={title}\n              onChange={(e) => setTitle(e.target.value)}\n              maxlength=\"255\"\n            />\n          </div>\n          <div className=\"editor_container\">\n            <ReactQuill\n              className=\"editor\"\n              theme=\"snow\"\n              value={text}\n              onChange={(e) => setText(e)}\n            />\n          </div>\n        </div>\n        <div className=\"writeblog_menu\">\n          <div className=\"writeblog_menu_item\">\n            <h1>Publish</h1>\n            <span>\n              <b>Status: </b> Draft\n            </span>\n            <span>\n              <b>Visibility: </b> Public\n            </span>\n            <input\n              type=\"file\"\n              id=\"file\"\n              style={{ display: \"none\" }}\n              onChange={(e) => setUploadedFiles(e.target.files)}\n            />\n            <label className=\"file_upload\" htmlFor=\"file\">\n              Upload Image\n            </label>\n            {uploadedFiles.length > 0 && (\n              <div className=\"main_image_upload\">\n                <span>{uploadedFiles[0].name}</span>\n                <IconContext.Provider\n                  value={{\n                    className: \"shared-class edit_icon\",\n                    color: \"red\",\n                    size: 20,\n                  }}\n                >\n                  <AiFillDelete\n                    className=\"writeblog_delete\"\n                    onClick={() => setUploadedFiles([])}\n                  />\n                </IconContext.Provider>\n              </div>\n            )}\n            <input\n              type=\"file\"\n              id=\"screenshots\"\n              style={{ display: \"none\" }}\n              multiple\n              onChange={(e) => screenShotHandler(e)}\n            />\n            <label className=\"file_upload\" htmlFor=\"screenshots\">\n              Upload Screenshots\n            </label>\n            <div className=\"screenshot_files\">\n              {screenshotFile.map((file) => (\n                <div className=\"screenshot_file\" key={file.name}>\n                  <span>{file.name}</span>\n                  <IconContext.Provider\n                    value={{\n                      className: \"shared-class edit_icon\",\n                      color: \"red\",\n                      size: 20,\n                    }}\n                  >\n                    <AiFillDelete\n                      className=\"writeblog_delete\"\n                      onClick={() =>\n                        setScreenshotFile(\n                          screenshotFile.filter((f) => f !== file)\n                        )\n                      }\n                    />\n                  </IconContext.Provider>\n                </div>\n              ))}\n            </div>\n            <div className=\"write_buttons\">\n              <button className=\"write_button\">Save as Draft</button>\n              <button className=\"write_button\">Update</button>\n            </div>\n          </div>\n          <div className=\"writeblog_menu_item\">\n            <h1>Skills</h1>\n            <form onSubmit={handleSkillEntry}>\n              <input\n                type=\"text\"\n                placeholder=\"Enter Skill\"\n                value={skillInput}\n                onChange={handleSkillInputChange}\n                maxlength=\"255\"\n              />\n              <button type=\"submit\">Add Skill</button>\n            </form>\n\n            <div className=\"writeblog_skills\">\n              {skills.map((skill) => (\n                <div className=\"writeblog_skill\">\n                  <span>{skill}</span>\n                  <IconContext.Provider\n                    value={{\n                      className: \"shared-class edit_icon\",\n                      color: \"red\",\n                      size: 20,\n                    }}\n                  >\n                    <AiFillDelete\n                      className=\"writeblog_delete\"\n                      onClick={() =>\n                        setSkills(skills.filter((s) => s !== skill))\n                      }\n                    />\n                  </IconContext.Provider>\n                </div>\n              ))}\n            </div>\n          </div>\n        </div>\n      </div>\n    </div>\n  );\n};\n\nexport default WriteProject;\n"],"names":["_useState","useState","_useState2","_slicedToArray","title","setTitle","_useState3","_useState4","skills","setSkills","_useState5","_useState6","skillInput","setSkillInput","_useState7","_useState8","text","setText","_useState9","_useState10","uploadedFiles","setUploadedFiles","_useState11","_useState12","screenshotFile","setScreenshotFile","console","log","_jsx","className","children","_jsxs","htmlFor","type","value","onChange","e","target","maxlength","ReactQuill","theme","id","style","display","files","length","name","IconContext","Provider","color","size","AiFillDelete","onClick","multiple","filesArray","Array","from","_toConsumableArray","concat","screenShotHandler","map","file","filter","f","onSubmit","preventDefault","newSkill","trim","includes","placeholder","skill","s"],"sourceRoot":""}